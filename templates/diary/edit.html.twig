{% extends 'base.html.twig' %}

{% block title %}Edit Diary Entry{% endblock %}

{% block body %}
<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card glass-panel glass-panel-glow p-0">
                <div class="card-header bg-cyber-g border-success border-1 border-bottom">
                    <h2 class="m-2 mb-0">Edit Entry</h2>
                </div>
                <div class="card-body body-color">

                    <form id="editForm" class="needs-validation" novalidate>
                        <div class="mb-3">
                            <label for="title" class="form-label">Title</label>
                            <input type="text" class="form-control" id="title" name="title" value="{{ entry.title }}" required>
                        </div>

                        {% include 'diary/_rich_editor.html.twig' with { content: entry.contentFormatted|default(entry.content) } %}

                        <div class="mb-3">
                            <label for="mood" class="form-label">Mood</label>
                            <select class="form-select" id="mood" name="mood">
                                <option value="">Select mood...</option>
                                <option value="Happy" {% if entry.mood == 'Happy' %}selected{% endif %}>Happy</option>
                                <option value="Calm" {% if entry.mood == 'Calm' %}selected{% endif %}>Calm</option>
                                <option value="Thoughtful" {% if entry.mood == 'Thoughtful' %}selected{% endif %}>Thoughtful</option>
                                <option value="Excited" {% if entry.mood == 'Excited' %}selected{% endif %}>Excited</option>
                                <option value="Sad" {% if entry.mood == 'Sad' %}selected{% endif %}>Sad</option>
                                <option value="Anxious" {% if entry.mood == 'Anxious' %}selected{% endif %}>Anxious</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="tags" class="form-label">Tags</label>
                            <input type="text" class="form-control" id="tags" name="tags" value="{{ entry.tags|join(', ') }}">
                            <small class="form-text text-muted">Separate tags with commas</small>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="{{ path('diary_show', {id: entry.id}) }}" class="btn btn-secondary me-3">
                                <i class="mdi mdi-arrow-left"></i> Back
                            </a>
                            <button type="submit" class="btn btn-cyber">
                                <i class="mdi mdi-content-save"></i> Save
                            </button>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
{% block rich_editor_js %}{% endblock %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const editor = document.getElementById('editor');
    const form = document.getElementById('editForm');

    // Initialize editor with content
    editor.innerHTML = {{ entry.contentFormatted|default(entry.content)|json_encode|raw }};

    // Form submission
    form.addEventListener('submit', async function(e) {
        e.preventDefault();

        // Prepare form data
        const formData = {
            title: document.getElementById('title').value,
            content: editor.innerText,
            contentFormatted: editor.innerHTML,
            mood: document.getElementById('mood').value,
            tags: document.getElementById('tags').value.split(',').map(tag => tag.trim()).filter(tag => tag)
        };

        try {
            const response = await fetch(`/api/diary/{{ entry.id }}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });

            if (response.ok) {
                window.location.href = '{{ path('diary_show', {id: entry.id}) }}';
            } else {
                throw new Error('Failed to update entry');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Failed to update entry. Please try again.');
        }
    });
});
</script>
{% endblock %}

